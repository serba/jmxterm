Scripting Feature

  JMXTERM is not designed to be a middle layer between JMX API and application. To wrap JMX with objects easy to call by scripting language such as goovy or beanshell, there are other technologies designed to help such scenario. For example {{{http://groovy.codehaus.org/Groovy+and+JMX}Groovy JMX}} provides some classes that wraps an MBean and expose nice API. JMXTERM itself doesn't provide scripting features such as variable manupulation or flow control keywords.
  
  However, since the commands in JMXTERM comes from standard input, modern script environment that handles stdin nicely, such as SHELL or PERL, can easily combine scripting feature with JMXTERM by using input pipe. Following example is a small perl segment that connects to an MBean server and list domains.


+-----------------------------------+
# This Perl script open connection and call domains
# $jar stands for path of jmxterm jar file
open JMX, "| java -jar $jar";
print JMX "help \n";

my host = "localhost";
my port = 9991;

print JMX "open $host:$port\n";
print JMX "domains\n";
print JMX "close\n";
close JMX;
+-----------------------------------+